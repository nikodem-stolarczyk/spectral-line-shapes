CPFAccurate[x_?NumberQ, y_?NumberQ]:=
 (* ----------------------------------------
    Accurate CPF algorithm
    Computes the complex probability function using a rational series
    with 42 terms. It is assumed that Im(z) > 0 or Im(z) = 0. (reference: jstor.org/stable/2158232)
    A series was simplified to 37 terms introducing less than 10^(-17)
    deviations on mHT profile.
    
    Standard Input Parameters:
    -------------------- 
    x  : Real part of input complex parameter
    y  : Imaginary part of input complex parameter
    
    The function has one output:
    --------------------
    (1): Complex probability function
    ---------------------------------------- *) 
    Block[{
        is\[Pi] = 0.5641895835477563` (* Inverse Square \[Pi] *),
        z   = -y + I x,
        L   = 5.449631621480024` (* The pre-calculated Weideman constant for N = 42 *),
        a   = { -3.129493160727961` 10^(-14), -1.188364999909099` 10^(-14), +1.951777029849348` 10^(-13), +1.790586243645278` 10^(-13),
                -1.184560208678836` 10^(-12), -2.069163661083667` 10^(-12), +6.430136110306704` 10^(-12), +2.063579921011804` 10^(-11),
                -2.392389527320517` 10^(-11), -1.799169607159564` 10^(-10), -6.353807951660892` 10^(-11), +1.282896083944607` 10^(-09),
                +2.636162411919059` 10^(-09), -5.468780625369738` 10^(-09), -3.294773119114329` 10^(-08), -2.752070035718561` 10^(-08),
                +2.206733163926054` 10^(-07), +8.511689670641750` 10^(-07), +4.936972061734341` 10^(-07), -6.617492208403963` 10^(-06),
                -2.914574364851397` 10^(-05), -4.816473680511106` 10^(-05), +1.044072210002090` 10^(-04), +1.070131083157417` 10^(-03),
                +4.631075611097791` 10^(-03), +1.480296368764821` 10^(-02), +3.922970169744468` 10^(-02), +9.038744880336540` 10^(-02),
                +1.857036333535562` 10^(-01), +3.455278077566057` 10^(-01), +5.882708203344523` 10^(-01), +9.230959991941070` 10^(-01),
                +1.342044484596932` 10^(+00), +1.814714451499866` 10^(+00), +2.288734169675538` 10^(+00), +2.697763665856064` 10^(+00),
                +2.975931371735470` 10^(+00)} (* The pre-calculated table of FFT constant terms (truncated from the begining) *)},
        2 Total[a.((L+z)/(L-z))^Range[36,0,-1], Method->"CompensatedSummation"]/(L-z)^2 + is\[Pi]/(L-z)]
		
CPFFast[x_?NumberQ, y_?NumberQ]:=
 (* ----------------------------------------
    Fast CPF algorithm
    Computes the complex probability function using Humlicek's 
    algorithm in its first subregion (Source: 10.1016/0022-4073(82)90078-4) 
    and using a rational series with 24 terms in other subregions. (reference: jstor.org/stable/2158232)
     
     Standard Input Parameters:
     -------------------- 
     x  : Real part of input complex parameter
     y  : Imaginary part of input complex parameter
     
     The function has one output:
     --------------------
     (1): Complex probability function
     ---------------------------------------- *) 
     Block[{
       is\[Pi] = 0.5641895835477563`, (* Inverse Square \[Pi] *)
       z   = -y + I x, 
       L   = 4.119534287814236` (* The pre-calculated Weideman constant for N = 24 *),
       a   = { -1.513747622620502` 10^(-10),  4.904820407381768` 10^(-09),  1.331045329581992` 10^(-09), -3.008282344381996` 10^(-08),
               -1.912225887484805` 10^(-08),  1.873834346505099` 10^(-07),  2.568264135399530` 10^(-07), -1.085647579417637` 10^(-06),
               -3.038893184366094` 10^(-06),  4.139461724429617` 10^(-06),  3.047106608295325` 10^(-05),  2.433141546207148` 10^(-05),
               -2.074843151143828` 10^(-04), -7.816642995626165` 10^(-04), -4.936426901286291` 10^(-04),  6.215006362949147` 10^(-03),
                3.372336685531603` 10^(-02),  1.083872348456673` 10^(-01),  2.654963959880772` 10^(-01),  5.361139535729116` 10^(-01),
                9.257087138588670` 10^(-01),  1.394819673379119` 10^(+00),  1.856286499205540` 10^(+00),  
                2.197858936531542` 10^(+00)} (* The pre-calculated table of FFT constant terms *),
       HumThreshold = 15.0 (* The border of the first Humlicek's region *),
       t},
     If[Abs[x]+y>HumThreshold, -is\[Pi] z/(t^2+0.5),2 Total[a.((L+z)/(L-z))^Range[23,0,-1], Method->"CompensatedSummation"]/(L-z)^2 + is\[Pi]/(L-z)]]
